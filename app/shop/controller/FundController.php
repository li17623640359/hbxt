<?php
/**
 *商户资金管理
 * @Author: Lcs
 * @Date: 2018/6/5 9:05
 */

namespace app\shop\controller;

use app\shop\model\PayLogModel;
use app\user\model\UserBillModel;
use app\user\model\UserCodeModel;
use app\user\model\UserModel;
use app\user\model\UserRechargeModel;
use cmf\controller\UserBaseController;
use Three\Mall;

class FundController extends UserBaseController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if (cmf_is_mobile()) {
            echo "请在手机端访问本页面";
            $this->redirect(url('mshop/Login/login'));
        }
        $this->assign('user', session('user'));
    }

    /**
     *余额
     * @Author: Lcs
     * @Date: 2018/6/5 9:06
     */
    public function index()
    {
        $param = $this->request->param();
        $where = array();
        !empty($param['start']) ? $start = strtotime('-1 day', strtotime($param['start'] . '23:59:59')) : $start = 0;
        !empty($param['end']) ? $end = strtotime('+1 day', strtotime($param['end'] . '0:0:0')) : $end = time();
        if (!empty($param['start']) || !empty($param['end'])) {
            $where['create_time'] = array('between', '' . $start . ',' . $end . '');
        }

        !empty($param['bill_type'])?$where['bill_type']=$param['bill_type']:'';
        !empty($param['bill_kind'])?$where['bill_kind']=$param['bill_kind']:'';
        $billModel = new UserBillModel();
        $bill = $billModel->getDataByUserid(cmf_get_current_user_id(),$where,20);
        $bill->appends($where);
        $this->assign('bill', $bill);
        $bill_kind = config('bill_kind');
        $this->assign('bill_kind', $bill_kind);
        $userModel = new UserModel();
        $user = $userModel->getInfoById(cmf_get_current_user_id());
        $this->assign('user', $user);
        $this->assign('where',$where);
        return $this->fetch();
    }

    public function paywater()
    {
        $param = $this->request->param();
        $where = array();
        !empty($param['start']) ? $start = strtotime('-1 day', strtotime($param['start'] . '23:59:59')) : $start = 0;
        !empty($param['end']) ? $end = strtotime('+1 day', strtotime($param['end'] . '0:0:0')) : $end = time();
        if (!empty($param['start']) || !empty($param['end'])) {
            $where['create_time'] = array('between', '' . $start . ',' . $end . '');
        }

        $userModel = new UserModel();
        $user = $userModel->getInfoById(cmf_get_current_user_id());
        $this->assign('user', $user);
        $id = cmf_get_current_user_id();
        $rechargeModel = new UserRechargeModel();
        $result = $rechargeModel->refer($id, $where);
        $result->appends($param);
        $this->assign('pay_log', $result);
        return $this->fetch();
    }

    /**
     *结算页
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/5 14:12
     */
    public function windup()
    {
        return $this->fetch();
    }


    /**
     *用户下单
     * @Author: Lcs
     * @Date: 2018/6/5 10:39
     */
    public function setOrder()
    {
        $param = $this->request->param();

        $data = array(
            'user_id' => cmf_get_current_user_id(),
            'in_code' => cmf_create_order_code(),
            'in_money' => $param['money'],
            'in_type' => $param['pay_type']
        );
        $rechargeModel = new UserRechargeModel();
        $result = $rechargeModel->addRecharge($data);
        return $result;

    }

    /**
     *根据选择的支付方式跳转页面
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/7 9:18
     */
    public function pay()
    {
        $order_id = $this->request->param('orderid', 0, 'intval');
        if (empty($order_id)) {
            $this->redirect(url('shop/Index/index'));
        }

        $rechargeModel = new UserRechargeModel();
        $order_info = $rechargeModel->getUserOrderById($order_id, cmf_get_current_user_id());

        if (empty($order_info)) {
            $this->redirect(url('shop/Index/index'));
        }
        if ($order_info['in_type'] == 2) {
            $this->alipay($order_info);
        } elseif ($order_info['in_type'] == 1) {
            return $this->weixinpay($order_info);
        }
    }

    /**
     * 支付宝支付
     * @date: 2018年5月12日下午5:13:25
     * @author: Hhb
     * @param unknown $order_id
     */
    protected function alipay($order_info)
    {
        vendor('Alipay.Corefunction');
        vendor('Alipay.Md5function');
        vendor('Alipay.Notify');
        vendor('Alipay.Submit');
        $alipay_config = config('alipay_config');
        $payment_type = "1"; //支付类型 //必填，不能修改
        $notify_url = config('alipay.notify_url'); //服务器异步通知页面路径
        $return_url = config('alipay.return_url'); //页面跳转同步通知页面路径
        $seller_email = config('alipay.seller_email');//卖家支付宝帐户必填
        $out_trade_no = $order_info['in_code'];//商户订单号 通过支付页面的表单进行传递，注意要唯一！
        $subject = '测试商品';//$order_info['order_name']  //订单名称 //必填 通过支付页面的表单进行传递
        $total_fee = $order_info['in_money'];//$order_info['sum_money']   //付款金额  //必填 通过支付页面的表单进行传递
        $body = '';  //订单描述 通过支付页面的表单进行传递
        $show_url = '';  //商品展示地址 通过支付页面的表单进行传递
        $anti_phishing_key = "";//防钓鱼时间戳 //若要使用请调用类文件submit中的query_timestamp函数
        $exter_invoke_ip = get_client_ip(); //客户端的IP地址

        //构造要请求的参数数组，无需改动
        $parameter = array(
            "service" => "create_direct_pay_by_user",
            "partner" => trim($alipay_config['partner']),
            "payment_type" => $payment_type,
            "notify_url" => $notify_url,
            "return_url" => $return_url,
            "seller_id" => $seller_email,
            "out_trade_no" => $out_trade_no,
            "subject" => $subject,
            "total_fee" => $total_fee,
            "body" => $body,
            "show_url" => $show_url,
            "anti_phishing_key" => $anti_phishing_key,
            "exter_invoke_ip" => $exter_invoke_ip,
            "_input_charset" => trim(strtolower($alipay_config['input_charset']))
        );
        //建立请求
        $alipaySubmit = new \AlipaySubmit($alipay_config);
        $html_text = $alipaySubmit->buildRequestForm($parameter, "post", "正在跳转支付....");
        header("Content-Type:text/html;charset=utf-8");
        echo $html_text;
    }

    /**
     * 微信支付
     * @date: 2018年5月12日下午5:13:49
     * @author: Hhb
     */
    protected function weixinpay($order_info)
    {

        Vendor('WxPay.WxPay#JsApiPay');
        $url = Mall::createNativePay($order_info);
        $user = cmf_get_current_user();
        if (empty($url)) {
            if ($user['user_type'] == 2) {
                $this->redirect(url('agent/Index/index'));//代理
            } else {
                $this->redirect(url('shop/Index/index'));//商户
            }
        }

        if ($user['user_type'] == 2) {
//            代理
            $location_url = cmf_url('agent/Index/balance');
        } else {
//            商户
            $location_url = cmf_url('shop/Fund/index');
        }
        $this->assign('location_url', $location_url);
        $this->assign('order_info', $order_info);
        $this->assign('url', $url);
        $this->assign('orderid', $order_info['id']);
        return $this->fetch('weixin');
    }

    /**
     * 订单支付状态查询
     * @date: 2018年5月12日下午6:35:32
     * @author: Hhb
     */
    public function apiPayoderState()
    {
        $order_id = $this->request->param('orderid', 0, 'intval');
        if (empty($order_id)) {
            $this->success('ok');
        }

        $rechargeModel = new UserRechargeModel();
        $order_info = $rechargeModel->getUserOrderById($order_id, cmf_get_current_user_id());
        if (empty($order_info)) {
            $this->success('ok');
        }
        if ($order_info['status'] == 0) {
            $this->error('等待支付');
        } else {
            $this->success('ok');
        }
    }

}