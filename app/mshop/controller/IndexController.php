<?php
/**
 *
 * @Author: Lcs
 * @Date: 2018/6/28 10:37
 */

namespace app\mshop\controller;


use app\shop\model\UserShopModel;
use app\user\model\UserActivityModel;
use app\user\model\UserBillModel;
use app\user\model\UserCodeExtModel;
use app\user\model\UserCodeModel;
use app\user\model\UserModel;
use app\user\model\UserRechargeModel;
use cmf\controller\UserBaseController;
use think\Validate;

class IndexController extends UserBaseController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if (!cmf_is_mobile()) {
            $this->redirect(url('shop/Login/login'));
        }
    }

    /**
     *首页
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/28 11:03
     */
    public function index()
    {
        $id = cmf_get_current_user_id();
        $userMobile = new UserModel();
        $user = $userMobile->getInfoById($id);
        $this->assign('user', $user);

        $shopModel = new UserShopModel();
        $shop = $shopModel->findOut(array('a.user_id' => $id));
        $this->assign('shop', $shop);

        $activeModel = new UserActivityModel();
        $active = $activeModel->getDateList(array('user_id' => $id));
        $this->assign('count', count($active));

        return $this->fetch();
    }

    /**
     *去充值
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/28 11:17
     */
    public function windup()
    {
        $location_url = cmf_url('mshop/index/index');
        $this->assign('url', $location_url);
        return $this->fetch();
    }

    /**
     *充值
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/7/3 12:01
     */
    public function record()
    {
        $id = cmf_get_current_user_id();
        if ($this->request->isAjax()) {
            $rechargeModel = new UserRechargeModel();
            $result = $rechargeModel->refer($id, array(), 10);
            return $this->success('ok', '', array('list' => $result->toArray()));
        }
        $userModel = new UserModel();
        $user = $userModel->getInfoById($id);
        $this->assign('user', $user);

        return $this->fetch();
    }

    /**
     *设置
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/28 11:18
     */
    public function set()
    {
        return $this->fetch();
    }

//    public function

    /**
     *个人信息
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/28 11:24
     */
    public function info()
    {
        $id = cmf_get_current_user_id();
        $userMobile = new UserModel();
        $user = $userMobile->getInfoById($id);
        $this->assign('user', $user);
        $shopModel = new UserShopModel();
        $shop = $shopModel->findOut(array('a.user_id' => $id));
        $this->assign('shop', $shop);
        return $this->fetch();
    }

    /**
     *个人信息提交
     * @Author: Lcs
     * @Date: 2018/6/28 11:24
     */
    public function infoPost()
    {
        $param = $this->request->param();
        $validate = new Validate([
            'shop_logo|商户logo' => 'require',
            'shop_name|商户名称' => 'require',
            'principal|商户负责人' => 'require'
        ]);
        if (!$validate->check($param)) {
            $this->error($validate->getError());
        }

        $id = cmf_get_current_user_id();
        $usershopModel = new UserShopModel();

        $userModel = new UserModel();
        $userModel->save(array('user_nickname' => $param['principal']), array('id' => $id));
        $res = $usershopModel->editDataWhere($param, array('user_id' => $id));
        if ($res) {
            $this->success('ok');
        } else {
            $this->error($usershopModel->getError());
        }
    }

    /**
     *更改密码
     * @Author: Lcs
     * @Date: 2018/6/7 12:00
     */
    public function updatePwd()
    {
        if ($this->request->isAjax()) {
            $user = new UserModel();
            $log = $user->editPassword($this->request->param());
            switch ($log) {
                case 0:
                    return array('code' => 1, 'msg' => 'ok',);
                    break;
                case 1:
                    return array('code' => 0, 'msg' => '两次密码输入不一致');
                    break;
                case 2:
                    return array('code' => 0, 'msg' => '旧密码错误');
                    break;
                default :
                    return array('code' => 0, 'msg' => 'error');
            }
        } else {
            return $this->fetch();
        }
    }

    /**
     *活动列表页
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/28 13:58
     */
    public function active()
    {
        $activity_name = $this->request->param('activity_name', '');
        if ($this->request->isAjax()) {
            $id = cmf_get_current_user_id();
            $activeModel = new UserActivityModel();
            if (empty($activity_name)) {
                $active = $activeModel->getPageList(array('user_id' => $id), 5);
            } else {
                $active = $activeModel->getPageList(array('user_id' => $id, 'activity_name' => $activity_name), 5);
            }
            $active->appends($activity_name);
            $this->success('ok', '', array('list' => $active));
        }
        $this->assign('activity_name', $activity_name);
        return $this->fetch();
    }

    /**
     *活动详情
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/6/28 14:24
     */
    public function details()
    {
        $id = $this->request->param('id');
        if (isset($id)) {
            $activeModel = new UserActivityModel();
            $active = $activeModel->getInfoById($id);
            $shopModel = new UserShopModel();
            $shop = $shopModel->getDataWhere(array('user_id' => $active['user_id']));
            $active['principal'] = $shop['principal'];
            $active['packet_ext']=json_decode($active['packet_ext'],true);
            $active['fixed_ext']=json_decode($active['fixed_ext'],true);
            $this->assign('active', $active);
            return $this->fetch();
        }
        $this->redirect(url('active'));
    }

    /**
     *红包详情
     * @Author: Lcs
     * @Date: 2018/7/3 17:08
     */
    public function redpacket()
    {
        $id = $this->request->param('id', 0, 'intval');
        $code_num = $this->request->param('code_num', '');
        $activity_model = new UserActivityModel();
        $one = $activity_model->getDetailsById($id);
        $code_model = new UserCodeModel();
        $this->assign('one', $one);
        $code = array();
        if($one['type'] == 1){
            $res = $code_model->getActivityCodePageListById($id,$one['type']);
        }else{
            $res = $code_model->getActivityCodePageListById($id,$one['type']);
        }
        $this->assign('res',$res);
        $activity_type = config('activity_type');
        $packet_type = config('packet_type');
        $this->assign('activity_type', $activity_type);
        $this->assign('packet_type', $packet_type);
        if ($this->request->isAjax() && $this->request->isPost()) {
            if ($one['type'] == 1) {
                $code = array();
                $res = $code_model->getActivityCodePageListById($id, $one['type'], 20, $code_num);
            } else {
                $res = $code_model->getActivityCodePageListById($id, $one['type']);
                if (!empty($res)) {
                    $code = $res;
                    $code_ext_model = new UserCodeExtModel();
                    $res = $code_ext_model->getActivityCodePageListById($id, $code['id']);
                } else {
                    $code = array();
                }
            }
            $this->success('ok', '', ['list' => $res->toArray()]);
        }
        $this->assign('code_num', $code_num);
        return $this->fetch();

    }

    /**
     *密码是否正确
     * @return array
     * @Author: Lcs
     * @Date: 2018/7/14 12:34
     */
    public function isPwd()
    {
        $pwd = $this->request->param('pwd');
//        cmf_compare_password
        $user = new UserModel();
        $res = $user->where(array('id' => cmf_get_current_user_id(), 'is_delete' => 1))->find();
        $pwder = cmf_compare_password($pwd, $res['user_pass']);
        if ($pwder) {
            return array('code' => 1, 'msg' => 'ok');
        } else {
            return array('code' => 0, 'msg' => '密码错误');
        }
    }

    /**
     *充值记录
     * @Author: Lcs
     * @Date: 2018/7/14 12:35
     */
    public function payLog()
    {
        $userModel = new UserModel();
        $user = $userModel->getInfoById(cmf_get_current_user_id());
        $this->assign('user', $user);
        if ($this->request->isAjax()) {
            $id = cmf_get_current_user_id();
            $rechargeModel = new UserRechargeModel();
            $result = $rechargeModel->refer($id,array());
            $this->success('ok', '', array('list' => $result->toArray()));
        }
        return $this->fetch();
    }

    /**
     *流水明细
     * @return mixed
     * @Author: Lcs
     * @Date: 2018/7/14 13:52
     */
    public function itemized()
    {
        $userModel = new UserModel();
        $user = $userModel->getInfoById(cmf_get_current_user_id());
        $this->assign('user', $user);
        if ($this->request->isAjax()) {
            $billModel = new UserBillModel();
            $bill = $billModel->getDataByUserid(cmf_get_current_user_id(),'',20);
            $this->success('ok', '', array('list' => $bill->toArray()));
            $bill_kind = config('bill_kind');
            $this->assign('bill_kind', $bill_kind);
        }
        return $this->fetch();

    }

}