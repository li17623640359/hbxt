<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/6/13 0013
 * Time: 下午 3:59
 */

namespace app\agent\controller;
use app\user\model\UserActivityModel;
use app\user\model\UserCodeExtModel;
use app\user\model\UserCodeModel;
use app\user\model\UserModel;
use app\user\service\ActivityService;
use cmf\controller\UserBaseController;

class ActivityController extends UserBaseController
{
    public function _initialize()
    {
        if (cmf_is_mobile()){
            echo "请在手机端访问本页面";
            $this->redirect(url('mshop/Login/login'));
        }
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('user',session('user'));
    }

    /**
     *
     * @return mixed
     * @Author: Ldm
     * @FunctionName:活动列表
     * @Date:2018/6/14 0014
     */
   public function index(){
       $where=[];
       $agent_id=cmf_get_current_user_id();
       $user_ids=array();
       $search=$this->request->param('','');
       $user_id =!empty($search['user_id'])?$search['user_id']:0;
       $start =!empty($search['start_time'])?$search['start_time']:'';
       $is_examine=isset($search['is_examine'])&&$search['is_examine']!=''?$search['is_examine']:'';
       $site=isset($search['site'])&&$search['site']!=''?$search['site']:'';
//       $end = !empty($search['end_time'])?$search['end_time']:'';
       $param = array(
           'user_id'=>$user_id,
           'start_time'=>$start,
           'is_examine'=>$is_examine,
           'site'=>$site,
//           'end_time'=>$end
       );

          if(isset($search['is_examine'])&&$search['is_examine']!=''){
             $where['is_examine']=$param['is_examine'];
          }
        if(isset($search['site'])&&$search['site']!=''){
           $where['site']=$param['site'];
        }
       if(!empty($param['start_time'])){
           $timestamp = strtotime( $param['start_time'] );
           $start_time = date( 'Y-m-1 00:00:00', $timestamp );
           $mdays = date( 't', $timestamp );
           $end_time = date( 'Y-m-' . $mdays . ' 23:59:59', $timestamp );
           $where['start_time'] =array('between',''.strtotime( $start_time) .','.strtotime( $end_time ). '');
       }

//       if(!empty($param['end_time'])){
//           $timestamp = strtotime( $param['end_time'] );
//           $start_time = date( 'Y-m-1 00:00:00', $timestamp );
//           $mdays = date( 't', $timestamp );
//           $end_time = date( 'Y-m-' . $mdays . ' 23:59:59', $timestamp );
//           $where['end_time'] =array('between',''.strtotime( $start_time) .','.strtotime( $end_time ). '');
////           $where['create_time'] = [['egt',empty($param['start']) ? 0 : strtotime('-1 day', strtotime($param['start'] . ' 23:59:59'))],['elt',strtotime('+1 day', strtotime($param['end'] . ' 00:00:00'))]];
//       }
       $activity_type = config('activity_type');
       $packet_type = config('packet_type');
       $is_examine = config('is_examine');
       $is_site = config('site');
       $this->assign('activity_type',$activity_type);
       $this->assign('packet_type',$packet_type);
       $activity_service = new ActivityService();
       $users = $activity_service->getSelectUser('agent',  $agent_id);
      foreach ($users as $v){
          array_push($user_ids,$v['id']);
      }
       if(!empty($param['user_id'])){
           $user_ids = $param['user_id'];
       }
      $model = new \app\agent\model\UserActivityModel();
       $res = $model->getAgentPageList($where,$user_ids);
       $res->appends($param);
       $this->assign('param',$param);
       $this->assign('is_examine',$is_examine);
       $this->assign('is_site',$is_site);
       $this->assign('res',$res);
       $this->assign('page',$res->render());
       $this->assign('users',$users);
      return $this->fetch();
   }

    /**
     *
     * @Author: Ldm
     * @FunctionName:活动开启
     * @Date:2018/7/16 0016
     */
   public function siteOpen(){
   $list=$this->request->param();
   $activity= new UserActivityModel();
   $status=$activity->editSiteById($list['id'],$list['site']);
   if(empty($status)){
       $this->error('活动开启失败');
   }
     return $this->success('活动开启成功');
   }

    /**
     *
     * @Author: Ldm
     * @FunctionName:活动关闭
     * @Date:2018/7/16 0016
     */
   public function siteClose(){
       $list=$this->request->param();
       $activity= new UserActivityModel();
       $status=$activity->editSiteById($list['id'],$list['site']);
       if(empty($status)){
           $this->error('活动关闭失败');
       }
       return $this->success('活动关闭成功');
   }
    /**
     *
     * @return mixed
     * @Author: Ldm
     * @FunctionName:活动添加
     * @Date:2018/6/13 0013
     */
   public function add(){
       $activity_service = new ActivityService();
       $id=cmf_get_current_user_id();
       $users = $activity_service->getSelectUser('agent',  $id);
       $activity_type = config('activity_type');
       $packet_type = config('packet_type');
       $bili = 100-config('bili');
       $this->assign('bili',$bili);
       $this->assign('activity_type',$activity_type);
       $this->assign('packet_type',$packet_type);
       $this->assign('users',$users);
       return $this->fetch();
   }

    /**
     *
     * @Author: Ldm
     * @FunctionName:活动添加提交
     * @Date:2018/6/13 0013
     */
   public function addPost(){
       $param = $this->request->param();
       $post = $param['post'];
       $activity_service = new ActivityService();
       $re = $activity_service->addActivity($post);
       if($re['status'] == 1){
           $this->success('添加成功');
       }else{
           $this->error($re['msg']);
       }
   }

    /**
     *
     * @Author: Ldm
     * @FunctionName:活动详情
     * @Date:2018/6/13 0013
     */
   public function details(){
       $id = $this->request->param('id', 0, 'intval');
       $activity_model = new UserActivityModel();
       $one = $activity_model->getDetailsById($id);
       $code_model =   new \app\user\model\UserCodeModel();
       $this->assign('one', $one);
       if($one['type'] == 1){
           $code = array();
           $res = $code_model->getActivityCodePageListById($id,$one['type']);
       } else{
           $res = $code_model->getActivityCodePageListById($id,$one['type']);
           if(!empty($res)){
               $code = $res;
               $code_ext_model = new UserCodeExtModel();
               $res = $code_ext_model->getActivityCodePageListById($id, $code['id']);
           }else{
               $code = array();
           }
       }
       $this->assign('code',$code);
       $this->assign('res',$res);
       $this->assign('page',$res->render());
       $activity_type = config('activity_type');
       $packet_type = config('packet_type');
       $this->assign('activity_type',$activity_type);
       $this->assign('packet_type',$packet_type);
       return $this->fetch();
   }

    /**
     *
     * @Author: Ldm
     * @FunctionName:代理商活动编辑
     * @Date:2018/6/13 0013
     */
      public function edit(){
          $id = $this->request->param('id', 0, 'intval');
          $model = new UserActivityModel();
          $post = $model->getInfoById($id);
          $this->assign('post', $post);
          return $this->fetch();
     }

    /**
     *
     * @Author: Ldm
     * @FunctionName:代理商活动编辑
     * @Date:2018/6/13 0013
     */
     public function editPost(){
         if ($this->request->isPost()) {
             $data   = $this->request->param();
             $post   = $data['post'];
             $post['is_examine']=0;
             $post['site']=0;
             $service = new ActivityService();
             $re = $service->editActivity($post);
             if($re['status'] == 1){
                 $this->success('编辑成功');
             }else{
                 $this->error($re['msg']);
             }
         }else{
             $this->error('无效请求');
         }
     }
    /**
     * 获取用户余额以及二维码余量
     * @date: 2018年6月12日上午11:22:39
     * @author: Hhb
     */
    public function getUserData(){
        $id = $this->request->param('id',0,'intval');
        if(empty($id)){
            $this->error('参数异常');
        }
        $model = new UserModel();
        $user = $model->getInfoById($id);
        if(empty($user)){
            $this->error('数据异常');
        }
        $code_model =  new \app\user\model\UserCodeModel();
        $user_code = $code_model->getUserCodeNums($id,2);
        if(empty($user_code) || empty($user_code[0]['status'])){
            $num = 0;
        }else{
            $num = $user_code[0]['total'];
        }
        $data = array(
            'code_num'=>$num,
            'user_money'=>$user['balance']-$user['frozen_total']
        );
        $this->success('ok','',$data);
    }

    /**
     *
     * @Author: Ldm
     * @FunctionName:代理商二维码列表
     * @Date:2018/7/12 0012
     */
    public function userCode(){
        $status = $this->request->param('status',0,'intval');
        $start = $this->request->param('start','');
        $activity_name = $this->request->param('activity_name','');
        $end = $this->request->param('end','');
        $param = array(
            'status'=>$status,
            'start'=>$start,
            'activity_name'=>$activity_name,
            'end'=>$end
        );
        $where=[];
        if(!empty($param['status'])){
            $where['a.status'] = $param['status'];
        }
        if(!empty($param['activity_name'])){
            $where['c.activity_name'] = array('like','%'.$param['activity_name'].'%');
        }
        if(!empty($param['start'])){
            $where['a.code_num'] = ['egt',$param['start']];
        }
        if(!empty($param['end'])){
            $where['a.code_num'] = [['egt',empty($param['start'])?0:$param['start']],['elt',$param['end']]];
        }
        $model = new UserCodeModel();
        $where['a.user_id']=cmf_get_current_user_id();
        $res = $model->getDetailsPage($where);
        $res->appends($param);
        $code_status = config('code_status');
        unset($code_status['1']);
        $this->assign('code_status',$code_status);
        $this->assign('code',$res);
        $this->assign('param',$param);
        $this->assign('page',$res->render());
        return $this->fetch();
    }
}